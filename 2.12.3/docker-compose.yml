version: '3'

services:
  ocsapplication:
    image: ocsinventory/ocsinventory-docker-image:2.12.3
    container_name: ocsinventory-server
    restart: always
    expose:
      - "80"
    volumes:
      # Map Synology host folders into the container
      - /volume1/docker/ocsinventory/perlcomdata:/etc/ocsinventory-server
      - /volume1/docker/ocsinventory/ocsreportsdata:/usr/share/ocsinventory-reports/ocsreports/extensions
      - /volume1/docker/ocsinventory/varlibdata:/var/lib/ocsinventory-reports
      - /volume1/docker/ocsinventory/httpdconfdata:/etc/apache2/conf-available
      - /volume1/docker/ocsinventory/profilesconfdata:/usr/share/ocsinventory-reports/ocsreports/config/profiles
    environment:
      # Database connection details
      OCS_DB_SERVER: ocsinventory-db
      OCS_DB_USER: ocsuser
      OCS_DB_PASS: ocspass
      OCS_DB_NAME: ocsweb
      OCS_SSL_ENABLED: 0
      OCS_DBI_PRINT_ERROR: 0
    networks:
      - localocs
    depends_on:
      - ocsdb

  ocsdb:
    image: mysql:8.0
    container_name: ocsinventory-db
    restart: always
    expose:
      - "3306"
    volumes:
      # Replace with your actual Synology paths
      - /volume1/docker/ocsinventory/sql:/docker-entrypoint-initdb.d
      - /volume1/docker/ocsinventory/sqldata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_USER: ocsuser
      MYSQL_PASSWORD: ocspass
      MYSQL_DATABASE: ocsweb
    networks:
      - localocs

  ocsproxy:
    image: nginx
    container_name: ocsinventory-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Optional: if you want NGINX configs/certs on the host
      - /volume1/docker/ocsinventory/nginx/conf:/etc/nginx/templates
      - /volume1/docker/ocsinventory/nginx/certs:/etc/nginx/certs
      - /volume1/docker/ocsinventory/nginx/auth:/etc/nginx/auth
    environment:
      LISTEN_PORT: 80
      PORT_TYPE: ""
      SSL_CERT: ocs-dummy.crt
      SSL_KEY: ocs-dummy.key
      API_AUTH_FILE: ocsapi.htpasswd
      READ_TIMEOUT: 300
      CONNECT_TIMEOUT: 300
      SEND_TIMEOUT: 300
      MAX_BODY_SIZE: 1G
    depends_on:
      - ocsapplication
    networks:
      - localocs

networks:
  localocs:
